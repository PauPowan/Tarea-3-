#BlueJ class context
comment0.target=Separador
comment1.params=base\ cantFiguras\ grupos
comment1.target=Separador(int[][],\ int,\ int)
comment10.params=v\ n\ num
comment10.target=boolean\ valido(int[],\ int,\ int)
comment10.text=\r\n\ Identifica\ si\ un\ n\u00FAmero\ prove\u00EDdo\ es\ diferente\ a\ todos\ los\ n\u00FAmeros\r\n\ de\ un\ vector\ en\ \u00EDndices\ menores\ al\ prove\u00EDdo\r\n\r\n\ @param\ \ int[]\ v\ el\ vector\ cuyos\ elementos\ se\ comparar\u00E1n\r\n\ @param\ \ int\ n\ el\ \u00EDndice\ desde\ el\ que\ se\ comparar\u00E1\r\n\ @param\ int\ num\ un\ n\u00FAmero\ a\ comparar\r\n\ \r\n\ @return\ boolean\ un\ valor\ que\ representa\ si\ el\ n\u00FAmero\ es\ v\u00E1lido\r\n\r\n
comment11.params=grupo\ anadir
comment11.target=void\ anadirAlGrupo(int,\ int)
comment11.text=\r\n\ A\u00F1ade\ una\ figura\ a\ un\ grupo\r\n\ \r\n\ @param\ \ int\ grupo\ el\ grupo\ al\ que\ se\ va\ a\ a\u00F1adir\r\n\ @param\ \ int\ anadir\ el\ \u00EDndice\ de\ la\ figura\ en\ el\ vector\ de\ figuras\ actual\r\n\ \r\n\ @return\ No\ posee\r\n\r\n
comment2.params=
comment2.target=ImagenPrograma[]\ separar()
comment2.text=\r\n\ Separa\ las\ figura\ de\ la\ imagen\ que\ se\ est\u00E1\ analizando\r\n\r\n\ @param\ \ No\ posee\r\n\ \r\n\ @return\ ImagenPrograma[]\ las\ im\u00E1genes\ resultantes\ de\ la\ separaci\u00F3n\r\n\r\n
comment3.params=
comment3.target=ImagenPrograma[]\ agrupar()
comment3.text=\r\n\ Agrupa\ las\ figuras\ de\ la\ imagen\ que\ se\ est\u00E1\ analizando.\ Busca\ un\r\n\ grupo\ de\ representantes,\ si\ los\ representantes\ no\ son\ los\ indicados,\r\n\ buscar\u00E1\ nuevos\ representantes.\ Esta\ elecci\u00F3n\ de\ representantes\ se\ \r\n\ basa\ en\ un\ promedio\ de\ las\ \u00E1reas\ de\ las\ figuras\ y\ elige\ la\ figura\ que\r\n\ tenga\ el\ \u00E1rea\ m\u00E1s\ cercana\ a\ ese\ promedio.\ Este\ m\u00E9todo\ hace\ uso\ de\ \r\n\ escogerRepresentantes,copiarVector,\ nuevosRepresentantes,\ pasarVector\ \r\n\ y\ anadirAlGrupo\ para\ realizar\ ese\ agrupamiento.\r\n\r\n\ @param\ \ No\ posee\r\n\ \r\n\ @return\ ImagenPrograma[]\ las\ im\u00E1genes\ resultantes\ del\ agrupamiento\r\n\r\n
comment4.params=m
comment4.target=void\ iniciarMatriz(ImagenPrograma[][])
comment4.text=\r\n\ Inicializa\ una\ matr\u00EDz\ de\ im\u00E1genes\ vac\u00EDa\ utilizando\ la\ base\ para\ \r\n\ generar\ estas\ im\u00E1genes.\ Esta\ matr\u00EDz\ representa\ los\ grupos\ de\ im\u00E1genes\ \r\n\ y\ las\ figuras\ dentro\ de\ ellas.\r\n\r\n\ @param\ \ ImagenPrograma[][]\ m\ la\ matr\u00EDz\ a\ modificar.\r\n\ \r\n\ @return\ No\ posee\r\n\r\n
comment5.params=v1\ v2
comment5.target=void\ pasarVector(ImagenPrograma[],\ ImagenPrograma[])
comment5.text=\r\n\ Pasa\ una\ imagen\ de\ un\ vector\ a\ otro,\ reiniciando\ la\ imagen\ en\ el\ proceso\r\n\r\n\ @param\ \ ImagenPrograma[]\ v1\ el\ vector\ destino\r\n\ @param\ \ ImagenPrograma[]\ v2\ el\ vector\ origen\r\n\ \r\n\ @return\ No\ posee\r\n\r\n
comment6.params=v1\ v2
comment6.target=void\ copiarVector(ImagenPrograma[],\ ImagenPrograma[])
comment6.text=\r\n\ Copia\ una\ imagen\ de\ un\ vector\ a\ otro,\ sin\ reiniciarla\r\n\r\n\ @param\ \ ImagenPrograma[]\ v1\ el\ vector\ destino\r\n\ @param\ \ ImagenPrograma[]\ v2\ el\ vector\ origen\r\n\ \r\n\ @return\ No\ posee\r\n\r\n
comment7.params=v1\ v2
comment7.target=boolean\ comparar(ImagenPrograma[],\ ImagenPrograma[])
comment7.text=\r\n\ Compara\ si\ una\ imagen\ en\ un\ vector\ es\ igual\ a\ otra\ en\ su\ misma\ posici\u00F3n\ en\ un\ vector\ diferente\r\n\r\n\ @param\ \ ImagenPrograma[]\ v1\ el\ vector\ destino\r\n\ @param\ \ ImagenPrograma[]\ v2\ el\ vector\ origen\r\n\ \r\n\ @return\ No\ posee\r\n\r\n
comment8.params=
comment8.target=int[]\ nuevosRepresentantes()
comment8.text=\r\n\ Elige\ los\ nuevos\ representantes\ para\ cada\ grupo.\ Calcula\ un\ promedio\ de\ las\ \u00E1reas\ de\ un\ grupo\ \r\n\ y\ toma\ como\ representante\ a\ la\ figura\ con\ el\ \u00E1rea\ m\u00E1s\ cercana\ a\ ese\ promedio\r\n\r\n\ @param\ \ No\ posee\r\n\ \r\n\ @return\ int[]\ un\ vector\ que\ contiene\ los\ \u00EDndices\ de\ los\ nuevos\ representantes\ de\ cada\ grupo\ \r\n\r\n
comment9.params=
comment9.target=int[]\ escogerRepresentantes()
comment9.text=\r\n\ Elige\ representantes\ para\ los\ grupos\ al\ azar\r\n\r\n\ @param\ \ No\ posee\r\n\ \r\n\ @return\ int[]\ un\ vector\ que\ contiene\ los\ \u00EDndices\ de\ los\ nuevos\ representantes\ de\ cada\ grupo\ \r\n\r\n
numComments=12
